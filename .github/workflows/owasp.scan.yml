name: ZAP Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout o código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './owasp/package-lock.json'

      - name: Instala dependências
        working-directory: ./owasp
        run: npm install

      - name: Inicia servidor em background
        working-directory: ./owasp
        run: |
          nohup node index.js > server.log 2>&1 &
          echo $! > server.pid

      - name: Aguarda o servidor subir
        run: |
          echo "Aguardando servidor subir..."
          timeout 60 bash -c 'until curl -sf http://localhost:3000/rota-exemplo; do sleep 2; done'
          echo "Servidor está rodando"

      - name: Executa ZAP baseline scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:3000'
          fail_action: true
          cmd_options: '-r zap-report.html -J zap-report.json'
        continue-on-error: true

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: zap-scan-report
          path: |
            zap-report.html
            zap-report.json

      - name: Cleanup - Para o servidor
        if: always()
        working-directory: ./owasp
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi
